#include<stdio.h>
#include<stdlib.h>
#include<malloc.h>

struct node
{
    int data;
    struct node *link;
};
struct node *root,*temp,*ptr,*curptr;

void insertbeg()
{
    temp=(struct node *)malloc(sizeof(struct node));
    printf("Enter node data\n");
    scanf("%d",&temp->data);
    temp->link=NULL;
    
    if(root==NULL)
    root=temp;
    else
    {
        temp->link=root;
        root=temp;
    }
}


void insertend()
{ temp=(struct node *)malloc(sizeof(struct node));
    printf("Enter node data\n");
    scanf("%d",&temp->data);
    temp->link=NULL;
    
    if(root==NULL)
    root=temp;
    else
    { ptr=root;
     while(ptr!=NULL)
     { ptr=ptr->link;
     }
     ptr->link=temp;
     temp->link=NULL;
    }
    
}


void insertloc()
{ int count=0,pos,i;
    ptr=root;
    while(ptr!=NULL)
    {
        count++;
        ptr=ptr->link;
    }
    
    printf("Enter the position at which data is to be inserted\n");
    scanf("%d",&pos);
    
    if(pos==1)
    insertbeg();
    else if(pos==count+1)
    insertend();
    else if(pos>1&&pos<=count)
    { temp=(struct node *)malloc(sizeof(struct node));
      printf("Enter node data\n");
      scanf("%d",&temp->data);
      temp->link=NULL;
        ptr=root;
        for(i=1;i<pos-1;i++)
        {ptr=ptr->link;
        }
        temp->link=ptr->link;
        ptr->link=temp;
     }
}

void delbeg()
{
    if(root==NULL)
    printf("Empty list\n");
    else
    {
        ptr=root;
        root=root->link;
        free(ptr);
    }
}

void delend()
{
    
    if(root==NULL)
    printf("Empty list\n");
    else
    { ptr=root;
      while(ptr!=NULL)
      {   curptr=ptr;
          ptr=ptr->link;
      }
    curptr->link=NULL;
    free(ptr);
    }
}


void delpos()
{ int pos=0,count=0,i=0;
    
    if(root==NULL)
    printf("Empty list\n");
    else
    { ptr=root;
      while(ptr!=NULL)
      { count++;
        ptr=ptr->link;
      }
      printf("Enter the position at which data is to be deleted\n");
      scanf("%d",&pos);
      
      if(pos==1)
      delbeg();
      else if(pos==count+1)
      delend();
      else if(pos>1&&pos<=count)
      {
          ptr=root;
          for(i=1;i<pos;i++)
          { curptr=ptr;
              ptr=ptr->link;
          }
          curptr->link=ptr->link;
          free(ptr);
      }
        
    }
}

void display()
{
    
    if(root==NULL)
    printf("Empty list\n");
    else
    { ptr=root;
     while(ptr->link!=NULL)
     {  printf("%d-->",ptr->data);
         ptr=ptr->link;
     }
     printf("%d-->",ptr->data);
     printf("\n");
    }
}



int main()
{
    int ch;
    while(1)
    {
        printf("1.Insertbeg\n2.Insertend\n3.InsertPos\n4.Delbeg\n5.Delend\n6.Deletepos\n7.Display\n8.Exit\n");
        printf("Enter your choice\n");
        scanf("%d",&ch);
        
        switch(ch)
        {
            case 1:insertbeg();break;
            case 2:insertend();break;
            case 3:insertloc();break;
            case 4:delbeg();break;
            case 5:delend();break;
            case 6:delpos();break;
            case 7:display();break;
            case 8:exit(0);
        }
    }
}




